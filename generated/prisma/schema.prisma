// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Enum for different art style types, add any additional types as required
enum ArtStyleType {
  DOT_PAINTING
  BARK_PAINTING
  ROCK_ART
  WEAVING
  CROSS_HATCHING
  OCHRE
  SCULPTURE
  X_RAY_ART
  CERAMICS
  CONTEMPORARY
  TRADITIONAL
}

// Enum for dimension units
enum DimensionUnit {
  CM
  INCHES
  MM
}

model Artist {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  aboriginalName String?
  tribe          String?
  region         String?
  biography      String
  birthYear      Int?
  deathYear      Int?
  artStyles      ArtStyleType[]
  imageUrl       String?
  artefacts      Artefact[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Artefact {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  artist       Artist?      @relation(fields: [artistId], references: [id])
  artistId     String?      @db.ObjectId
  creationYear Int?
  description  String?
  dimensions   Dimensions?
  artStyle     ArtStyleType
  imageUrl     String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  // These fields aren't used, they need to remain in so Exhibitions can store artefacts
  exhibitions   Exhibition[] @relation(fields: [exhibitionIds], references: [id])
  exhibitionIds String[]     @db.ObjectId
}

// Type definition for dimensions
type Dimensions {
  height Float
  width  Float
  depth  Float?
  unit   DimensionUnit
}

model Exhibition {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  theme        String?
  startDate    DateTime
  endDate      DateTime
  //isCurrentlyActive Boolean //removed - moved to computed field
  location     String
  artefacts    Artefact[] @relation(fields: [artefactIds], references: [id])
  artefactIds  String[]   @db.ObjectId
  imageUrl     String?
  admissionFee Float?     @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

// Enum for dimension units
enum RoleType {
  USER
  CURATOR
  ADMIN
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  email          String   @unique
  username       String   @unique
  firstName      String?
  lastName       String?
  hashedPassword String
  role           RoleType @default(USER)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
