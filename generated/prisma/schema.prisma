// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Artist {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  aboriginalName String?
  tribe          String?
  region         String?
  biography      String
  birthYear      Int?
  deathYear      Int?
  artStyles      String[]
  imageUrl       String?
  artefacts      Artefact[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Artefact {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  artist        Artist       @relation(fields: [artistId], references: [id])
  artistId      String       @db.ObjectId
  exhibitions   Exhibition[] @relation(fields: [exhibitionIds], references: [id])
  exhibitionIds String[]     @db.ObjectId
  creationYear  Int?
  description   String?
  dimensions    Json?
  artStyle      String
  imageUrl      String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Exhibition {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  description       String
  theme             String?
  startDate         DateTime
  endDate           DateTime
  isCurrentlyActive Boolean
  location          String
  artefacts         Artefact[] @relation(fields: [artefactIds], references: [id])
  artefactIds       String[]   @db.ObjectId
  imageUrl          String?
  admissionFee      Float?     @default(0)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}
